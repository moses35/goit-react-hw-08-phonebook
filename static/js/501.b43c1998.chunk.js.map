{"version":3,"file":"static/js/501.b43c1998.chunk.js","mappings":"oQAGaA,EAAOC,EAAAA,EAAAA,KAAH,gIAQJC,EAAeD,EAAAA,EAAAA,KAAH,2DAKZE,GAASF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,iE,iPCFNI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CAAEC,MAAO,GAAIC,SAAU,MALtCC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAKIC,GAAgBC,EAAAA,EAAAA,MAChBC,GAAaD,EAAAA,EAAAA,MAEnB,OACE,+BACE,SAAC,KAAD,CACEE,SAAUP,GAAa,SAAAQ,GACrBf,GACEgB,EAAAA,EAAAA,IAAU,CACRZ,MAAOW,EAAKX,MACZC,SAAUU,EAAKV,YAGnBK,GACD,IATH,UAWE,UAAC,KAAD,CAAaO,UAAWT,EAAOU,KAA/B,WACE,SAAC,IAAD,CAAWC,QAASN,EAApB,SAAgC,WAChC,UAAC,IAAD,YACE,SAAC,IAAD,CAAkBO,cAAc,OAAhC,UACE,SAAC,IAAD,CAAWC,MAAM,gBAEnB,SAAC,EAAAC,GAAD,gBACEC,KAAK,SACDjB,EAAS,QAAS,CAAEkB,UAAU,KAFpC,IAGEC,GAAIZ,SAGR,SAAC,IAAD,CAAWM,QAASR,EAApB,SAAmC,cACnC,UAAC,IAAD,YACE,SAAC,IAAD,CAAkBS,cAAc,OAAhC,UACE,SAAC,IAAD,CAAYC,MAAM,gBAEpB,SAAC,EAAAC,GAAD,gBACEC,KAAK,YACDjB,EAAS,WAAY,CAAEkB,UAAU,KAFvC,IAGEE,aAAa,KACbD,GAAId,SAGR,SAAC,KAAD,CAAQgB,YAAY,OAAOC,KAAK,KAAKL,KAAK,SAA1C,SAAmD,iBAO5D,ECtEYM,EAAY,WACvB,OAAO,SAAC9B,EAAD,GACR,EAED,G,2DCFI+B,GAAaC,E,QAAAA,GAAW,CAC1BC,EAAG,wRACHC,YAAa,c,8ECDXA,GAAYF,EAAAA,EAAAA,GAAW,CACzBG,YAAa,YACbC,MAAsBC,EAAAA,EAAAA,MAAK,IAAK,CAAEC,KAAM,eAAgBL,SAAU,EAChDM,EAAAA,EAAAA,KAAI,OAAQ,CAAE,EAAG,uJACjBA,EAAAA,EAAAA,KAAI,OAAQ,CAAE,EAAG,iZ","sources":["components/ContactForm/ContactForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","../node_modules/@chakra-ui/icons/src/Unlock.tsx","../node_modules/@chakra-ui/icons/src/Email.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Button as Submit } from '@chakra-ui/react';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 250px;\n  gap: 10px;\n`;\n\nexport const ErrorMessage = styled.span`\n  color: red;\n  font-size: 11px;\n`;\n\nexport const Button = styled(Submit)`\n  margin-left: 0px;\n  margin-top: 10px;\n`;\n","import { nanoid } from 'nanoid';\nimport { Button, Form } from 'components/ContactForm/ContactForm.styled';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/operationsAuth';\nimport {\n  FormLabel,\n  FormControl,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { EmailIcon, UnlockIcon } from '@chakra-ui/icons';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    defaultValues: { email: '', password: '' },\n  });\n\n  const inputPassword = nanoid();\n  const inputEmail = nanoid();\n\n  return (\n    <>\n      <Form\n        onSubmit={handleSubmit(data => {\n          dispatch(\n            loginUser({\n              email: data.email,\n              password: data.password,\n            })\n          );\n          reset();\n        })}\n      >\n        <FormControl isInvalid={errors.name}>\n          <FormLabel htmlFor={inputEmail}>Email</FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <EmailIcon color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              type=\"email\"\n              {...register('email', { required: true })}\n              id={inputEmail}\n            />\n          </InputGroup>\n          <FormLabel htmlFor={inputPassword}>Password</FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <UnlockIcon color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              type=\"password\"\n              {...register('password', { required: true })}\n              autoComplete=\"on\"\n              id={inputPassword}\n            />\n          </InputGroup>\n          <Button colorScheme=\"teal\" size=\"sm\" type=\"submit\">\n            Log In\n          </Button>\n        </FormControl>\n      </Form>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport const LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const UnlockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75A6.751,6.751,0,0,0,5.533,4.811a1.25,1.25,0,1,0,2.395.717A4.251,4.251,0,0,1,16.25,6.75V9a.5.5,0,0,1-.5.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5Z\",\n  displayName: \"UnlockIcon\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const EmailIcon = createIcon({\n  displayName: \"EmailIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M11.114,14.556a1.252,1.252,0,0,0,1.768,0L22.568,4.87a.5.5,0,0,0-.281-.849A1.966,1.966,0,0,0,22,4H2a1.966,1.966,0,0,0-.289.021.5.5,0,0,0-.281.849Z\" />\n      <path d=\"M23.888,5.832a.182.182,0,0,0-.2.039l-6.2,6.2a.251.251,0,0,0,0,.354l5.043,5.043a.75.75,0,1,1-1.06,1.061l-5.043-5.043a.25.25,0,0,0-.354,0l-2.129,2.129a2.75,2.75,0,0,1-3.888,0L7.926,13.488a.251.251,0,0,0-.354,0L2.529,18.531a.75.75,0,0,1-1.06-1.061l5.043-5.043a.251.251,0,0,0,0-.354l-6.2-6.2a.18.18,0,0,0-.2-.039A.182.182,0,0,0,0,6V18a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A.181.181,0,0,0,23.888,5.832Z\" />\n    </g>\n  ),\n})\n"],"names":["Form","styled","ErrorMessage","Button","Submit","LoginForm","dispatch","useDispatch","useForm","defaultValues","email","password","register","handleSubmit","errors","formState","reset","inputPassword","nanoid","inputEmail","onSubmit","data","loginUser","isInvalid","name","htmlFor","pointerEvents","color","I","type","required","id","autoComplete","colorScheme","size","LoginPage","UnlockIcon","createIcon","d","displayName","path","fill","EmailIcon","children","jsx"],"sourceRoot":""}